{"version":3,"file":"static/js/374.823c338d.chunk.js","mappings":"sSAEaA,EAAgBC,EAAAA,GAAAA,QAAH,gGAObC,EAAYD,EAAAA,GAAAA,OAAH,8e,SC0CtB,EA5CiB,SAAC,GAAc,IAAD,IAAXE,EAAW,EAAXA,KACVC,EAAuDD,EAAvDC,YAAaC,EAA0CF,EAA1CE,MAAOC,EAAmCH,EAAnCG,aAAcC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,OAE9CC,GAAWC,EAAAA,EAAAA,MACXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,SAE3D,OACE,4BACE,SAAC,KAAD,CAAMC,GAAIJ,EAAoBK,QAA9B,UACE,SAAC,IAAD,UAAY,eAEd,UAAChB,EAAD,YACE,gBAAKiB,IAVM,4BAUUb,EAAac,IAAKb,EAAOc,MAAO,OACrD,4BACE,wBAAKd,KACL,yBAAG,eAAaC,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,uBAAIC,EAAOY,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,cAG7C,gCACE,wBAAI,wCACJ,2BACE,yBACE,SAAC,KAAD,CAASR,GAAG,OAAZ,UACE,SAACb,EAAD,UAAW,cAGf,yBACE,SAAC,KAAD,CAASa,GAAG,SAAZ,UACE,SAACb,EAAD,UAAW,sBAKnB,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,ECbD,EA9BoB,WAClB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,YAAxB,eAAO1B,EAAP,KAAa2B,EAAb,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACRD,GAAW,GAEX,IAAME,EAAQ,mCAAG,8GAEUC,EAAAA,EAAAA,IAAQR,GAFlB,OAEPO,EAFO,OAGbJ,EAAQI,GAHK,gDAKbE,QAAQC,IAAI,SALC,yBAObL,GAAW,GAPE,4EAAH,qDAWdE,GACD,GAAE,CAACP,EAAIG,KAGN,gCACGC,IAAW,SAACL,EAAA,EAAD,IACXvB,IAAQ,SAAC,EAAD,CAAUA,KAAMA,MAG9B,C,uKCzBM,SAAemC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,oBADlB,uBACGC,EADH,EACGA,KACRJ,QAAQC,IAAIG,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEAMA,SAAeN,EAAtB,+CAAO,OAAP,oBAAO,WAAuBR,GAAvB,yFACkBY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,oBADlB,uBACGa,EADH,EACGA,KACRJ,QAAQC,IAAIG,GAFP,kBAGEA,GAHF,kEAYA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA0Bf,GAA1B,yFACkBY,EAAAA,EAAAA,IAAA,iBACXZ,EADW,mCADlB,uBACGa,EADH,EACGA,KAGRJ,QAAQC,IAAIG,EAAKC,SAJZ,kBAKED,EAAKC,SALP,kEAQA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAyBC,GAAzB,yFACkBL,EAAAA,EAAAA,IAAA,8BAAiCK,EAAjC,YADlB,uBACGJ,EADH,EACGA,KACRJ,QAAQC,IAAIG,EAAKC,SAFZ,kBAGED,EAAKC,SAHP,kEA/BPF,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBM,QAJc,mC","sources":["components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","components/FilmDetails/FilmDetails.jsx","service/themoviedbApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledSection = styled.section`\n  margin-top: 30px;\n  display: flex;\n  gap: 30px;\n  color: #fffad9;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 5px 10px;\n  background-color: #050801;\n  color: #fffad9;\n  font-weight: bold;\n  border: solid;\n  border-radius: 5px;\n  letter-spacing: 4px;\n  overflow: hidden;\n  transition: 0.5s;\n  cursor: pointer;\n  margin: 20px;\n  &:hover {\n    background: #fffad9;\n    color: #050801;\n    box-shadow: 0 0 5px #fffad9, 0 0 15px #fffad9, 0 0 30px #fffad9,\n      0 0 50px #fffad9;\n    -webkit-box-reflect: below 1px linear-gradient(transparent, #0005);\n  }\n`;","import { useLocation, Link, Outlet, NavLink } from 'react-router-dom';\nimport { useRef, Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { GlowingBtn } from 'components/Layout/Layout.styled';\nimport { StyledSection } from './FilmCard.styled';\nimport { StyledBtn } from './FilmCard.styled';\n\nconst FilmCard = ({ film }) => {\n  const { poster_path, title, vote_average, overview, genres } = film;\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/film');\n\n  return (\n    <div>\n      <Link to={backLinkLocationRef.current}>\n        <GlowingBtn>Go back</GlowingBtn>\n      </Link>\n      <StyledSection>\n        <img src={ImageUrl + poster_path} alt={title} width={300} />\n        <div>\n          <h2>{title}</h2>\n          <p>User Score: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres.map(genre => genre.name).join(',')}</p>\n        </div>\n      </StyledSection>\n      <section>\n        <h3>Additional information about film:</h3>\n        <ul>\n          <li>\n            <NavLink to=\"cast\">\n              <StyledBtn>Cast</StyledBtn>\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"review\">\n              <StyledBtn>Review</StyledBtn>\n            </NavLink>\n          </li>\n        </ul>\n      </section>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default FilmCard;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getFilm } from 'service/themoviedbApi';\nimport FilmCard from 'components/FilmCard/FilmCard';\nimport { Loader } from 'components/Loader/Loader';\n\nconst FilmDetails = () => {\n  const { id } = useParams();\n  const [film, setFilm] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n\n    const filmInfo = async () => {\n      try {\n        const filmInfo = await getFilm(id);\n        setFilm(filmInfo);\n      } catch (error) {\n        console.log('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    filmInfo();\n  }, [id, setFilm]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {film && <FilmCard film={film} />}\n    </>\n  );\n};\n\nexport default FilmDetails;\n","import axios from 'axios';\n\nconst API_KEY = '391a97ba083a1d8591f2f4cbb9f29b09';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`trending/all/day`);\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getFilm(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getSearch(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  console.log(data.results);\n  return data.results;\n}\n"],"names":["StyledSection","styled","StyledBtn","film","poster_path","title","vote_average","overview","genres","location","useLocation","backLinkLocationRef","useRef","state","from","to","current","src","alt","width","map","genre","name","join","Suspense","fallback","Loader","id","useParams","useState","setFilm","loading","setLoading","useEffect","filmInfo","getFilm","console","log","getTrending","axios","data","results","getReviews","getSearch","query","api_key"],"sourceRoot":""}