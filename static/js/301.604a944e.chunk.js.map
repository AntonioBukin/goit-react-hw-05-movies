{"version":3,"file":"static/js/301.604a944e.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/FilmGallery/FilmGallery.styled.js","components/FilmGallery/FilmGallery.jsx","pages/Films.jsx","service/themoviedbApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Text = styled.p`\ncolor: #fffad9`;","import styled from 'styled-components';\n\nexport const Card = styled.li`\n  display: flex;\n  height: 480px;\n  width: 280px;\n  flex-direction: column;\n  padding: 1rem 1rem 2rem;\n  border: solid 1px #fffad9;\n  // box-shadow: 0 0 1px #fffad9, 0 0 3px #fffad9, 0 0 5px #fffad9,\n  //   0 0 10px #fffad9;\n  border-radius: 3px;\n  &:hover {\n    box-shadow: 0 0 2px #fffad9, 0 0 4px #fffad9, 0 0 6px #fffad9,\n      0 0 15px #fffad9;\n    border-radius: 3px;\n  }\n`;","import { useLocation, NavLink } from 'react-router-dom';\nimport { Card } from './FilmGallery.styled';\n\nexport default function FilmGallery({ film }) {\n  const location = useLocation();\n  const { id, name, title, poster_path } = film;\n  const ImageUrl = '//image.tmdb.org/t/p/w500';\n  return (\n    <Card key={id}>\n      <NavLink to={`/film/${id}`} state={{ from: location }}>\n        <img src={ImageUrl + poster_path} alt={title} width={280} />\n        <h3>{title ?? name}</h3>\n      </NavLink>\n    </Card>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { getSearch } from 'service/themoviedbApi';\nimport Notiflix from 'notiflix';\nimport { useSearchParams } from 'react-router-dom';\nimport FilmGallery from '../components/FilmGallery/FilmGallery';\nimport { Loader } from '../components/Loader/Loader';\n\nimport { GlowingBtn } from '../components/Layout/Layout.styled';\nimport { Text } from '../components/Cast/Cast.styled';\n\nconst Films = () => {\n  const [SearchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [films, setFilms] = useState([]);\n  const searchTitle = SearchParams.get('query');\n  const [noFilms, setNoFilms] = useState(false);\n\n  useEffect(() => {\n    const filmTrading = async () => {\n      if (!searchTitle) {\n        return;\n      }\n      setLoading(true);\n      try {\n        const film = await getSearch(searchTitle);\n        setFilms(film);\n        if (film.length === 0) {\n          setNoFilms(true);\n        } else {\n          setNoFilms(false);\n        }\n      } catch (error) {\n        console.log('error');\n      } finally {\n        setLoading(false);\n      }\n    };\n    filmTrading();\n  }, [searchTitle]);\n\n  const handleNameChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      Notiflix.Notify.failure(`Please enter a name`);\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n\n  const onSubmit = name => {\n    if (searchTitle === name) {\n      Notiflix.Notify.info(`You request \"${name}\" has alredy been!`);\n      return;\n    }\n    setQuery(name);\n    setSearchParams({ query: query });\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <GlowingBtn type=\"submit\">\n          <span>Search</span>\n        </GlowingBtn>\n\n        <input\n          type=\"text\"\n          placeholder=\"Looking for foto and images\"\n          value={query}\n          onChange={handleNameChange}\n        />\n      </form>\n      {loading && <Loader />}\n      {noFilms && <Text>Film is not found</Text>}\n      {films.length > 0 && (\n        <ul>\n          {films.map(film => (\n            <FilmGallery key={film.id} film={film} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Films;\n","import axios from 'axios';\n\nconst API_KEY = '391a97ba083a1d8591f2f4cbb9f29b09';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function getTrending() {\n  const { data } = await axios.get(`trending/all/day`);\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getFilm(id) {\n  const { data } = await axios.get(`/movie/${id}&language=en-US`);\n  console.log(data);\n  return data;\n}\n\nexport async function getCredits(id) {\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\n  console.log(data);\n  return data.cast;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `/movie/${id}/reviews?language=en-US&page=1`\n  );\n  console.log(data.results);\n  return data.results;\n}\n\nexport async function getSearch(query) {\n  const { data } = await axios.get(`/search/movie?query=${query}&page=1`);\n  console.log(data.results);\n  return data.results;\n}\n"],"names":["Text","styled","Card","FilmGallery","film","location","useLocation","id","name","title","poster_path","to","state","from","src","alt","width","useSearchParams","SearchParams","setSearchParams","useState","loading","setLoading","query","setQuery","films","setFilms","searchTitle","get","noFilms","setNoFilms","useEffect","filmTrading","getSearch","length","console","log","onSubmit","Notiflix","event","preventDefault","trim","type","placeholder","value","onChange","currentTarget","toLowerCase","map","getTrending","axios","data","results","getFilm","getReviews","api_key"],"sourceRoot":""}